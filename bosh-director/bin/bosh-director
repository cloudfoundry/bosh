#!/usr/bin/env ruby

require 'bosh/director'
require 'thin'

config_file = nil

opts = OptionParser.new do |op|
  op.on('-c', '--config [ARG]', 'Configuration File') do |opt|
    config_file = opt
  end
end

opts.parse!(ARGV.dup)

config_file ||= ::File.expand_path('../../config/bosh-director.yml', __FILE__)
config = Bosh::Director::Config.load_file(config_file)

Bosh::Director::App.new(config)

thin_server = Thin::Server.new('127.0.0.1', config.hash['port'], signals: false) do
  use Rack::CommonLogger

  map '/info' do
    run Bosh::Director::Api::Controllers::InfoController.new
  end

  map '/tasks' do
    run Bosh::Director::Api::Controllers::TasksController.new
  end

  map '/backups' do
    run Bosh::Director::Api::Controllers::BackupsController.new
  end

  map '/deployments' do
    run Bosh::Director::Api::Controllers::DeploymentsController.new
  end

  map '/packages' do
    run Bosh::Director::Api::Controllers::PackagesController.new
  end

  map '/releases' do
    run Bosh::Director::Api::Controllers::ReleasesController.new
  end

  map '/resources' do
    run Bosh::Director::Api::Controllers::ResourcesController.new
  end

  map '/resurrection' do
    run Bosh::Director::Api::Controllers::ResurrectionController.new
  end

  map '/stemcells' do
    run Bosh::Director::Api::Controllers::StemcellsController.new
  end

  map '/task' do
    run Bosh::Director::Api::Controllers::TaskController.new
  end

  map '/users' do
    run Bosh::Director::Api::Controllers::UsersController.new
  end

  map '/compiled_package_groups' do
    run Bosh::Director::Api::Controllers::CompiledPackagesController.new
  end

  map '/locks' do
    run Bosh::Director::Api::Controllers::LocksController.new
  end
end

%w(TERM INT QUIT).each do |signal|
  trap(signal) do
    Bosh::Director::Config.logger.info('Shutting down Director')
    thin_server.stop!
  end
end

Bosh::Director::Config.logger.info("Listening on port #{config.hash['port']}")
thin_server.start!
