#!/usr/bin/env ruby

require "trollop"
require "bosh/release"

CPIS = %w[aws openstack cloudstack vcloud vsphere]
COMMANDS = %w[apply compile]

def usage(msg=nil)
  $stderr.puts "error: #{msg}" if msg
  $stderr.puts "usage: bosh-release <options> <command> <arguments>"
  $stderr.puts "  options:"
  $stderr.puts "    --cpi <cloud provider interface> (#{CPIS.join(', ')})"
  $stderr.puts "    --job <job to compile> (defaults to 'micro_<cpi>')"
  $stderr.puts "  commands:"
  $stderr.puts "    apply <apply_spec> <mbus_uri>"
  $stderr.puts "    compile <manifest> <release_tgz> <blobstore_path> <mbus_uri>"
  exit 1
end

options = Trollop::options do
  opt :cpi, "Cloud Provider Interface", :type => String, :required => true
  opt :job, "Job to compile", :type => String
  stop_on COMMANDS
end

unless CPIS.include?(options[:cpi])
  Trollop::die :cpi, "unknown CPI '#{options[:cpi]}'"
end

unless options[:job_given]
  options[:job] = "micro_#{options[:cpi]}"
end

options["command"] = ARGV.shift

case options["command"]
when "apply"
  usage "apply requires 2 arguments" unless ARGV.size == 2
  options["apply_spec"] = ARGV.shift
  options["agent_uri"] = ARGV.shift
when "compile"
  usage "compile requires 4 arguments" unless ARGV.size == 4
  options["manifest"] = ARGV.shift
  options["release"] = ARGV.shift
  options["blobstore_options"] = {"blobstore_path" => ARGV.shift}
  options["agent_uri"] = ARGV.shift
when nil
  usage "no command given"
else
  usage "unknown command: #{options["command"]}"
end

Bosh::Release::Runner.start(options)
