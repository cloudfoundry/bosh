{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for creating BOSH AWS infrastructure for concourse ci.",
  "Mappings": {
    "IPConfigurations": {
      "VPC": {
        "CIDR": "10.0.0.0/16"
      },
      "UbuntuBATs": {
        "CIDR": "10.0.0.0/24",
        "ReservedRange": "10.0.0.2-10.0.0.9",
        "StaticRange": "10.0.0.10-10.0.0.30",
        "DirectorPrivate": "10.0.0.6",
        "Static1": "10.0.0.29",
        "Static2": "10.0.0.30",
        "Gateway": "10.0.0.1"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            "IPConfigurations",
            "VPC",
            "CIDR"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "bats"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "bats"
          }
        ]
      }
    },
    "AttachGateway": {
      "DependsOn": [
        "VPC",
        "InternetGateway"
      ],
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "RouteTable": {
      "DependsOn": [
        "VPC"
      ],
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "bats"
          }
        ]
      }
    },
    "Route": {
      "DependsOn": [
        "RouteTable",
        "AttachGateway"
      ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "NetworkAcl": {
      "DependsOn": [
        "VPC"
      ],
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "bats"
          }
        ]
      }
    },
    "InBoundAllTrafficAclEntry": {
      "DependsOn": [
        "NetworkAcl"
      ],
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "OutBoundAllTrafficAclEntry": {
      "DependsOn": [
        "NetworkAcl"
      ],
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "CISecurityGroup": {
      "DependsOn": [
        "VPC"
      ],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "allows local and concourse traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ci"
          }
        ]
      }
    },
    "UbuntuSubnet": {
      "DependsOn": [
        "VPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "IPConfigurations",
            "UbuntuBATs",
            "CIDR"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "bats-ubuntu"
          }
        ]
      }
    },
    "UbuntuSubnetRouteTableAssociation": {
      "DependsOn": [
        "UbuntuSubnet",
        "RouteTable"
      ],
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "UbuntuSubnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "UbuntuSubnetNetworkAclAssociation": {
      "DependsOn": [
        "UbuntuSubnet",
        "NetworkAcl"
      ],
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "UbuntuSubnet"
        },
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "UbuntuDirectorIPAddress": {
      "DependsOn": [
        "AttachGateway"
      ],
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "UbuntuBATSIPAddress": {
      "DependsOn": [
        "AttachGateway"
      ],
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    }
  },
  "Outputs": {
    "UbuntuSecurityGroupID": { "Value": { "Ref": "CISecurityGroup"}},
    "UbuntuDirectorEIP": { "Value": { "Ref": "UbuntuDirectorIPAddress"}},
    "UbuntuBATsEIP": { "Value": { "Ref": "UbuntuBATSIPAddress"}},
    "UbuntuSubnetID": { "Value": { "Ref": "UbuntuSubnet"}},
    "UbuntuAvailabilityZone": { "Value": { "Fn::GetAtt": [ "UbuntuSubnet", "AvailabilityZone"]}},
    "UbuntuCIDR": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "CIDR"]}},
    "UbuntuGateway": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "Gateway"]}},
    "UbuntuReservedRange": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "ReservedRange"]}},
    "UbuntuDirectorStaticIP": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "DirectorPrivate"]}},
    "UbuntuStaticRange": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "StaticRange"]}},
    "UbuntuStaticIP1": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "Static1"]}},
    "UbuntuStaticIP2": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "UbuntuBATs", "Static2"]}}
  }
}
