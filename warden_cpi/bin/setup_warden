#!/bin/sh
#
# setup warden

set -e

# You have to install the right kernel. If you are running ubuntu 10.04(Lucid), the backported Natty kernel(2.6.38) is required.
KERNEL_VERSION=2
MAJOR_KERNEL_REVISION=6
MINOR_KERNEL_REVISION=38

# Your default linux config file
DEFAULT_CONFIG_FILE="config/linux.yml"

# This method can verify your running kernel version is higher than you defined.
# It consists of three parameters:
#    KERNEL_VERSION
#    MAJOR_KERNEL_REVISION
#    MINOR_KERNEL_REVISION
# If your running version is higher than [KERNEL_VERSION].[MAJOR_KERNEL_REVISION].[MINOR_KERNEL_REVISION].
# it will return 0, otherwise 1.
kernel_version_after(){
  kernel_version=$(uname -r | cut -f 1 -d .)
  major_kernel_revision=$(uname -r | cut -f 2 -d .)
  minor_kernel_revision=$(uname -r | cut -f 3 -d .| cut -f 1 -d -)
  if [ $kernel_version -gt $1 ]; then
    return 0
  elif [ $kernel_version -eq $1 ] && [ $major_kernel_revision -gt $2 ]; then
    return 0
  elif [ $kernel_version -eq $1 ] && [ $major_kernel_revision -eq $2 ] && [ $minor_kernel_revision -ge $3 ]; then
    return 0
  else
    return 1
  fi
}

# show how to use this script
usage(){
  echo " Usage: $0 <warden_dir> [<config_file>] "
}

# get warden code directory
if [ -z $1 ]; then
  usage
  exit 1
else
  warden_dir=$1
fi

# get configure file directory
if [ -n $2 ]; then
  config_file_file=$DEFAULT_CONFIG_FILE
else
  config_file_file=$2
fi

# check running linux kernel version and sure required kernel is installed, otherwise script will exit.
if ! kernel_version_after $KERNEL_VERSION $MAJOR_KERNEL_REVISION $MINOR_KERNEL_REVISION ; then
  echo "If you are running Ubuntu 10.04 (Lucid), make sure the backported Natty kernel is installed. After installing, reboot the system before continuing. install the kernel using the following command: sudo apt-get install -y linux-image-generic-lts-backport-natty" 2>&1
  exit 1
fi

echo 'install required packages'
sudo apt-get --force-yes -y install libnl1 quota
sudo apt-get --force-yes -y install git-core

# mkdir if warden code directory not exist, and then git clone code
[ -d $warden_dir ] || mkdir -p $warden_dir

echo "git clone warden code"
cd $warden_dir
git clone https://github.com/cloudfoundry/warden.git

echo "bundle install"
cd "./warden/warden"
bundle install

echo "setup warden"
sudo env PATH=$PATH bundle exec rake setup[$config_file_file]
