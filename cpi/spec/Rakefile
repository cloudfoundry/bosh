require "tempfile"
require "rake"

APP_DIR = File.expand_path(File.join("..", ".."), __FILE__)
ENV["BUNDLE_GEMFILE"] ||= File.join(APP_DIR, "Gemfile")
require "rubygems"
require "bundler"
Bundler.setup(:default, :test)

require "rspec/core/rake_task"
require "ci/reporter/rake/rspec"

desc "Run all examples"
RSpec::Core::RakeTask.new(:spec) do |t|
  t.pattern    = "**/*_spec.rb"
  t.rspec_opts = %w[--color]
end

task :default => [:spec]

coverage_dir   = File.expand_path(File.join(File.dirname(__FILE__), "..", "spec_coverage"))
reports_dir    = File.expand_path(File.join(File.dirname(__FILE__), "..", "spec_reports"))
dump_file      = File.join(Dir.tmpdir, "bosh-blobstore-client.rcov")

ENV["CI_REPORTS"] = reports_dir

namespace "spec" do
  gemfile   = "../Gemfile"
  spec_opts = ["--format", "documentation", "--colour"]

  if RUBY_VERSION < "1.9"
    desc "Run specs for ci"
    task "ci" => [ "ci:setup:rspec", "spec:rcov", "convert_rcov_to_clover" ]

    desc "Run spec with coverage"
    RSpec::Core::RakeTask.new("rcov") do |t|
      FileUtils.rm_rf(dump_file)
      t.gemfile    = gemfile
      t.pattern    = "**/*_spec.rb"
      t.rspec_opts = ["--format", "progress", "--colour"]
      t.rcov       = true
      t.rcov_opts  = %W{--aggregate #{dump_file} --exclude osx\/objc,gems\/,spec\/,unit\/,features\/ -o "#{coverage_dir}"}
    end

    task "convert_rcov_to_clover" do |t|
      ignore_pattern = "spec,[.]bundle,[/]gems[/]"
      clover_output  = File.join(coverage_dir, "clover.xml")

      sh("bundle exec rcov_analyzer #{dump_file} #{ignore_pattern} > #{clover_output}")
      FileUtils.rm_rf(dump_file)
    end

  else
    desc "Run specs for ci"
    task "ci" => [ "ci:setup:rspec", "spec:rcov" ]

    desc "Run spec with coverage"
    task :rcov => :cleanup_coverage do
      require "simplecov"
      require "simplecov-rcov"
      require "simplecov-clover"

      class SimpleCov::Formatter::CombinedFormatter
        def format(result)
          SimpleCov::Formatter::CloverFormatter.new.format(result)
          SimpleCov::Formatter::RcovFormatter.new.format(result)
        end
      end

      SimpleCov.formatter = SimpleCov::Formatter::CombinedFormatter
      SimpleCov.root('..')
      SimpleCov.coverage_dir('cov')
      SimpleCov.start do
        require "rspec/core"
        add_filter "/spec/"
        spec_dir = File.expand_path("..", __FILE__)
        RSpec::Core::Runner.disable_autorun!
        RSpec::Core::Runner.run([spec_dir], STDERR, STDOUT)
      end
    end
  end

  task "cleanup_coverage" do
    rm_rf "cov"
  end

end
