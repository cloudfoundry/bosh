# Copyright (c) 2009-2012 VMware, Inc.

if RUBY_VERSION < "1.9"
  puts("BOSH Director requires Ruby 1.9+")
  exit(1)
end

ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile", __FILE__)

require "tempfile"

require "rubygems"
require "bundler"
Bundler.setup(:default, :test)

require "rake"
require "rspec/core/rake_task"
require "ci/reporter/rake/rspec"

coverage_dir = File.expand_path(File.join(File.dirname(__FILE__), "..", "spec_coverage"))
reports_dir = File.expand_path(File.join(File.dirname(__FILE__), "..", "spec_reports"))

ENV["CI_REPORTS"] = reports_dir

namespace "redis" do

  REDIS_DIR = File.join(File.dirname(__FILE__), "assets")
  REDIS_CNF = File.join(REDIS_DIR, "redis_test.conf")
  REDIS_PID = File.join(REDIS_DIR, "redis_db/redis.pid")

  task :start do
    redis_running = false

    begin
      redis_running = File.exists?(REDIS_PID) && Process.kill(0, File.read(REDIS_PID).to_i)
    rescue Errno::ESRCH
      FileUtils.rm REDIS_PID
      false
    end

    unless redis_running
      output = `redis-server "#{REDIS_CNF}"`
      unless $?.exitstatus == 0
        puts("Can't start redis-server: \n#{output}")
        exit(1)
      end
    end
  end

  task :stop do
    if File.exists?(REDIS_PID)
      Process.kill "INT", File.read(REDIS_PID).to_i
      FileUtils.rm REDIS_PID
    end
  end

end

desc "Run Director functional and unit tests"
task :spec => %W(spec:smoke:run)

namespace :spec do
  gemfile = "../Gemfile"
  spec_opts = %W(--format documentation --colour)

  desc "Run Director unit tests"
  task :unit => %W(spec:unit:run)

  task :cleanup_cov do
    FileUtils.rm_rf(coverage_dir)
  end

  task :cleanup_reports do
    FileUtils.rm_rf(reports_dir)
  end

  namespace :unit do
    desc ""
    RSpec::Core::RakeTask.new(:run) do |task|
      task.gemfile = gemfile
      task.rspec_opts = spec_opts
      task.pattern = "unit/**/*_spec.rb"
    end

    desc "Run Director unit tests with code coverage"
    task :cov do
      ENV["SIMPLECOV"] = "1"
      Rake::Task["spec:cleanup_cov"].invoke
      Rake::Task["spec:unit:run"].invoke
    end

    desc "Run Director unit tests for CI"
    task :ci => %W(ci:setup:rspec spec:cleanup_reports spec:unit:cov)
  end

  desc "Run Director functional tests"
  task :functional => %W(spec:functional:run)

  namespace :functional do
    task :run => %W(redis:start spec:functional:tests redis:stop)

    desc ""
    RSpec::Core::RakeTask.new(:tests) do |task|
      task.gemfile = gemfile
      task.rspec_opts = spec_opts
      task.pattern = "functional/**/*_spec.rb"
    end

    desc "Run Director functional tests with code coverage"
    task :cov do
      ENV["SIMPLECOV"] = "1"
      Rake::Task["spec:cleanup_cov"].invoke
      Rake::Task["spec:functional:run"].invoke
    end

    desc "Run Director functional tests for CI"
    task :ci => %W(ci:setup:rspec spec:cleanup_reports spec:functional:cov)
  end

  namespace :smoke do
    task :run => %W(redis:start spec:smoke:tests redis:stop)

    desc ""
    RSpec::Core::RakeTask.new(:tests) do |task|
      task.gemfile = gemfile
      task.rspec_opts = spec_opts
      task.pattern = "{unit,functional}/**/*_spec.rb"
    end
  end

  desc "Run Director functional tests"
  task :cpi => %W(spec:cpi:run)

  namespace :cpi do
    desc ""
    RSpec::Core::RakeTask.new(:run) do |task|
      task.gemfile = gemfile
      task.rspec_opts = spec_opts
      task.pattern = "cpi/**/*_spec.rb"
    end

    desc "Run Director CPI tests with code coverage"
    task :cov do
      ENV["SIMPLECOV"] = "1"
      Rake::Task["spec:cleanup_cov"].invoke
      Rake::Task["spec:cpi:run"].invoke
    end

    desc "Run Director CPI tests for CI"
    task :ci => %W(ci:setup:rspec spec:cleanup_reports spec:cpi:cov)
  end

end
