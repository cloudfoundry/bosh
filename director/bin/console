#!/usr/bin/env ruby

APP_DIR = File.expand_path(File.join("..", ".."), __FILE__)
ENV["BUNDLE_GEMFILE"] ||= File.join(APP_DIR, "Gemfile")

DEFAULT_DIRECTOR_CONFIG = File.join(APP_DIR, "config", "bosh-director.yml")

$:.unshift(File.expand_path(File.join(APP_DIR, "lib")))

require 'rubygems'
require 'bundler/setup'
require 'director'
require 'irb'
require 'irb/completion'
require 'rack/test'

module Bosh
  module Director

    class TestApplication
      include Rack::Test::Methods

      def app
        Bosh::Director::Controller.new
      end
    end

    class Console
      def self.start(context)
        new.start(context)
      end

      def start(context)
        options = {}

        OptionParser.new do |opt|
          opt.banner = "Usage: console [options]"
          opt.on('-c', '--config [ARG]', 'configuration file') { |v| options[:config] = v }
          opt.parse!(ARGV)
        end

        if options[:config]
          config_file = File.expand_path(options[:config])
        else
          config_file = DEFAULT_DIRECTOR_CONFIG
        end

        puts "=> Loading #{config_file}"
        Bosh::Director::Config.configure(YAML.load(File.read(config_file)))

        context.instance_eval do
          include BD::Models
        end

        begin
          require 'ruby-debug'
          puts "=> Debugger enabled"
        rescue LoadError
          puts "=> ruby-debug not found, debugger disabled"
        end

        puts "=> Welcome to BOSH Director console\n=> You can use 'app' to access REST API"
        puts "=> You can also use 'cloud', 'blobstore', 'nats' helpers to query these services"

        IRB.start
      end

    end
  end
end

BD = Bosh::Director

def app
  BD::TestApplication.new
end

def config
  BD::Config
end

[:redis, :blobstore, :nats, :cloud].each do |helper|
  self.class.send(:define_method, helper) do
    config.send(helper)
  end
end

Thread.new do
  EM.run
end.join(1)

BD::Console.start(self)

