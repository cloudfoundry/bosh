#!/usr/bin/env ruby

require 'bosh/director'
require 'puma'
require 'puma/configuration'

config_file = nil

opts = OptionParser.new do |op|
  op.on('-c', '--config [ARG]', 'Configuration File') do |opt|
    config_file = opt
  end
end

opts.parse!(ARGV.dup)

config_file ||= ::File.expand_path('../../config/bosh-director.yml', __FILE__)
config = Bosh::Director::Config.load_file(config_file)

route_configuration = Bosh::Director::Api::RouteConfiguration.new(config)

rack_app = Puma::Rack::Builder.app do
  use Rack::CommonLogger

  route_configuration.controllers.each do |route, controller|
    map(route) { run controller }
  end
end

puma_configuration = Puma::Configuration.new do |user_config|
  user_config.workers config.puma_workers
  user_config.bind "tcp://localhost:#{config.port}"
  user_config.app rack_app
  user_config.preload_app!
  # this makes sure that all puma workers get their own db connections
  user_config.before_fork { Bosh::Director::Config.db.disconnect }
end
puma_launcher = Puma::Launcher.new(puma_configuration)

Bosh::Director::Config.logger.info("Listening on port #{config.port}")
Bosh::Director::Config.log_director_start
puma_launcher.run
