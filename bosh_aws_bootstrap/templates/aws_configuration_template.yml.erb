---
aws:
  secret_access_key: <%= ENV["BOSH_AWS_SECRET_ACCESS_KEY"] || raise("Missing ENV variable BOSH_AWS_SECRET_ACCESS_KEY") %>
  access_key_id: <%= ENV["BOSH_AWS_ACCESS_KEY_ID"] || raise("Missing ENV variable BOSH_AWS_ACCESS_KEY_ID") %>
  region: us-east-1
name: <%= ENV["BOSH_VPC_SUBDOMAIN"]  || raise("Missing ENV variable BOSH_VPC_SUBDOMAIN") %>
vpc:
  domain: <%= ENV["BOSH_VPC_SUBDOMAIN"] %>.cf-app.com
  instance_tenancy: default
  cidr: 10.10.0.0/16
  subnets:
    bosh:
      cidr: 10.10.0.0/24
      availability_zone: <%= ENV["BOSH_VPC_PRIMARY_AZ"] || raise("Missing ENV variable BOSH_VPC_PRIMARY_AZ") %>
      default_route: igw
      nat_instance:
        name: cf_nat_box
        ip: 10.10.0.10  # spin up NAT instance at fixed IP of 10.10.0.10
        security_group: open
        key_name: <%= ENV["BOSH_KEY_PAIR_NAME"] || "bosh" %>
    cf:
      cidr: 10.10.2.0/23
      availability_zone: <%= ENV["BOSH_VPC_PRIMARY_AZ"] || raise("Missing ENV variable BOSH_VPC_PRIMARY_AZ") %>
      default_route: cf_nat_box
    services:
      cidr: 10.10.4.0/23
      availability_zone: <%= ENV["BOSH_VPC_PRIMARY_AZ"] || raise("Missing ENV variable BOSH_VPC_PRIMARY_AZ") %>
      default_route: cf_nat_box
    rds_1:
      cidr: 10.10.1.0/28
      availability_zone: <%= ENV["BOSH_VPC_PRIMARY_AZ"] || raise("Missing ENV variable BOSH_VPC_PRIMARY_AZ") %>
    rds_2:
      cidr: 10.10.1.16/28
      availability_zone: <%= ENV["BOSH_VPC_SECONDARY_AZ"] || raise("Missing ENV variable BOSH_VPC_SECONDARY_AZ") %>
  dhcp_options:
    domain_name_servers:
      - 10.10.0.6  # IP of the BOSH DNS server?
      - 10.10.0.2  # local amazon public DNS server
  security_groups:
    - name: open
      ingress:
        - protocol: tcp
          ports: '0 - 65535'
          sources: 0.0.0.0/0
        - protocol: udp
          ports: '0 - 65535'
          sources: 0.0.0.0/0
    - name: bosh
      ingress:
        - protocol: tcp
          ports: '0 - 65535'
          sources: 0.0.0.0/0
        - protocol: udp
          ports: '0 - 65535'
          sources: 0.0.0.0/0
    - name: bat
      ingress:
        - protocol: tcp
          ports: '4567'
          sources: 0.0.0.0/0
        - protocol: tcp
          ports: '22'
          sources: 0.0.0.0/0
    - name: cf
      ingress:
        - protocol: tcp
          ports: '0 - 65535'
          sources: 0.0.0.0/0
        - protocol: udp
          ports: '0 - 65535'
          sources: 0.0.0.0/0
    - name: web
      ingress:
        - protocol: tcp
          ports: '80'
          sources: 0.0.0.0/0
        - protocol: tcp
          ports: '443'
          sources: 0.0.0.0/0
  elbs:
    cfrouter:
      dns_record: "*"
      ttl: 60
      subnets:
      - bosh
      security_group: web

elastic_ips:
  # each NAT box automatically reserves 1 elastic IP, which is not listed below
  micro:
    instances: 1
    dns_record: "micro"
    ttl: 60
  bat:
    instances: 1
    dns_record: "bat"
    ttl: 60
  bosh:
    instances: 1
    dns_record: bosh
    ttl: 60

key_pairs:
  <%= ENV["BOSH_KEY_PAIR_NAME"] || "bosh" %>: <%= ENV["BOSH_KEY_PATH"] || "#{ENV["HOME"]}/.ssh/id_rsa_bosh" %>
<% if ENV['BOSH_CACHE_ACCESS_KEY_ID'] %>
compiled_package_cache:
  access_key_id: <%= ENV['BOSH_CACHE_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['BOSH_CACHE_SECRET_ACCESS_KEY'] || raise('Missing ENV variable BOSH_CACHE_SECRET_ACCESS_KEY') %>
  bucket_name: <%= ENV['BOSH_CACHE_BUCKET_NAME'] || 'bosh-global-package-cache' %>
<% end %>
s3:
  - bucket_name: <%= (ENV["BOSH_VPC_SUBDOMAIN"] || raise("Missing ENV variable BOSH_VPC_SUBDOMAIN")) + "-bosh-blobstore" %>
rds:
  - name: ccdb
    tag: cc
    subnets:
      - rds_1
      - rds_2
    aws_creation_options:
      db_instance_class: db.m1.small
      # These are passed on directly to the AWS API call.
      # http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/RDS/Client.html#create_db_instance-instance_method
      allocated_storage: 7
      multi_az: true
  - name: uaadb
    tag: uaa
    subnets:
      - rds_1
      - rds_2
    aws_creation_options:
      db_instance_class: db.m1.small
