INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (9, 'health_monitor', '1dbe62f13eeddbe003df19075dc3a54c2e0d9e8f', 'bd7f7578-f100-489f-b6e7-4bf619989c60', 'e01f3887b3fd26ac148919c0320257f6c4db85cd', '["health_monitor","ruby"]', 2, 'null', '1dbe62f13eeddbe003df19075dc3a54c2e0d9e8f', '{"hm.http.port":{"description":"TCP port Health Monitor daemon listens on","default":25923},"hm.intervals.prune_events":{"description":"Interval (in seconds) to prune received events","default":30},"hm.intervals.poll_director":{"description":"Interval (in seconds) to get the list of managed VMs from Bosh Director","default":60},"hm.intervals.poll_grace_period":{"description":"Interval (in seconds) between discovering managed VMs and analyzing their status","default":30},"hm.intervals.log_stats":{"description":"Interval (in seconds) to log Health Monitor statistics","default":60},"hm.intervals.analyze_agents":{"description":"Interval (in seconds) to analyze the status of agents","default":60},"hm.intervals.agent_timeout":{"description":"Interval (in seconds) to consider an agent has timed out","default":60},"hm.intervals.rogue_agent_alert":{"description":"Interval (in seconds) to consider an agent as rogue (an agent that is no part of any deployment)","default":120},"hm.loglevel":{"description":"Level of log messages (fatal, error, warn, info, debug)","default":"info"},"hm.em_threadpool_size":{"description":"EM thread pool size","default":20},"nats.address":{"description":"Address of the NATS message bus to connect to"},"nats.port":{"description":"Port of the NATS message bus port to connect to","default":4222},"nats.user":{"description":"User for the NATS message bus connection"},"nats.password":{"description":"Password for NATS message bus connection"},"director.address":{"description":"Address of the Bosh Director to connect to"},"director.port":{"description":"Port of the Bosh Director to connect to","default":25555},"hm.director_account.user":{"description":"User to access Bosh Director","default":""},"hm.director_account.password":{"description":"Password to access Bosh Director","default":""},"hm.director_account.client_id":{"description":"UAA client id to access Bosh Director","default":""},"hm.director_account.client_secret":{"description":"UAA client secret to access Bosh Director","default":""},"hm.director_account.ca_cert":{"description":"Certificate to verify UAA endpoint","default":""},"event_nats_enabled":{"description":"Enable event NATS message bus plugin","default":false},"event_nats.address":{"description":"Address of the event NATS message bus to connect to"},"event_nats.port":{"description":"Port of the event NATS message bus port to connect to"},"event_nats.user":{"description":"User for the event NATS message bus connection"},"event_nats.password":{"description":"Password for event NATS message bus connection"},"hm.email_notifications":{"description":"Enable email notifications plugin","default":false},"hm.email_recipients":{"description":"Email of recipients (Array)"},"hm.smtp.from":{"description":"Email of sender, e.g. \\"bosh-director@cfapps.io\\""},"hm.smtp.host":{"description":"Address of the SMTP server to connect to (e.g. \\"smtp.gmail.com\\")"},"hm.smtp.port":{"description":"Port of the SMTP server to connect to (e.g. 25, 465, or 587)"},"hm.smtp.domain":{"description":"SMTP EHLO domain (typically server''s fully qualified domain name, e.g. \\"bosh.cfapps.io\\")"},"hm.smtp.tls":{"description":"Use STARTTLS (optional)"},"hm.smtp.auth":{"description":"SMTP Authentication type (optional, only \\"plain\\" is supported)"},"hm.smtp.user":{"description":"User for SMTP Authentication (optional, use in conjuction with hm.smtp.auth)"},"hm.smtp.password":{"description":"Password for SMTP Authentication (optional, use in conjuction with hm.smtp.auth)"},"hm.email_interval":{"description":"Interval (in seconds) to deliver alerts by email (optional)"},"hm.tsdb_enabled":{"description":"Enable TSDB plugin","default":false},"hm.tsdb.address":{"description":"Address of TSDB to connect to"},"hm.tsdb.port":{"description":"Port of TSDB to connect to"},"hm.pagerduty_enabled":{"description":"Enable PagerDuty plugin","default":false},"hm.pagerduty.service_key":{"description":"PagerDuty service API key"},"hm.pagerduty.http_proxy":{"description":"HTTP proxy to connect to PagerDuty (optional)"},"hm.cloud_watch_enabled":{"description":"Enable AWS CloudWatch Plugin","default":false},"aws.access_key_id":{"description":"AWS access key id"},"aws.secret_access_key":{"description":"AWS secret access key"},"hm.resurrector_enabled":{"description":"Enable VM resurrector plugin","default":false},"hm.resurrector.minimum_down_jobs":{"description":"If the total number of down jobs in a deployment is below this threshold, the resurrector will always request a down job be recreated","default":5},"hm.resurrector.percent_threshold":{"description":"Percentage of total jobs in a deployment that must be down for the resurrector to to stop sending recreate-job requests. Used in ''meltdown'' situations so resurrector will not try to recreate the world.","default":0.2},"hm.resurrector.time_threshold":{"description":"Time (in seconds) for which an alert in the resurrector is considered ''current''; alerts older than this are ignored when deciding to recreate a job.","default":600},"hm.datadog_enabled":{"description":"Enable DataDog plugin","default":false},"hm.datadog.api_key":{"description":"API Key for DataDog"},"hm.datadog.application_key":{"description":"Health Monitor Application Key for DataDog"},"hm.datadog.pagerduty_service_name":{"description":"Service name to alert in PagerDuty upon HM events"},"hm.graphite_enabled":{"description":"Enable Graphite plugin","default":false},"hm.graphite.address":{"description":"Graphite address"},"hm.graphite.port":{"description":"Graphite port"},"hm.graphite.prefix":{"description":"Prefix that will be added to all metrics sent to Graphite"},"hm.consul_event_forwarder_enabled":{"description":"Enable Consul Plugin","default":false},"hm.consul_event_forwarder.host":{"description":"Location of Consul Cluster or agent"},"hm.consul_event_forwarder.port":{"description":"Consul Port","default":8500},"hm.consul_event_forwarder.protocol":{"description":"http/https","default":"http"},"hm.consul_event_forwarder.params":{"description":"Params for url can be used for passing ACL token"},"hm.consul_event_forwarder.namespace":{"description":"A namespace for handling multiples of the same release"},"hm.consul_event_forwarder.ttl":{"description":"A ttl time for ttl checks, if set ttl checks will be used"},"hm.consul_event_forwarder.ttl_note":{"description":"A note for ttl checks","default":"Automatically Registered by Bosh-Monitor"},"hm.consul_event_forwarder.events":{"description":"Whether or not to use the events api","default":false},"hm.consul_event_forwarder.heartbeats_as_alerts":{"description":"Should we treat all heartbeats as alerts as well?","default":false},"hm.syslog_event_forwarder_enabled":{"description":"Enable syslog forwarder plugin","default":false},"hm.syslog_event_forwarder.address":{"description":"IP address of the syslog drain"},"hm.syslog_event_forwarder.port":{"description":"Port of the syslog drain","default":5514},"hm.syslog_event_forwarder.transport":{"description":"One of [\\"udp\\", \\"tcp\\", \\"relp\\"]","default":"tcp"},"hm.syslog_event_forwarder.custom_rule":{"description":"Custom rule for syslog event forwarder","default":""}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (10, 'registry', 'cb87e2ee9c510212a3c28b106206f3b444980236', 'f5446204-8b49-47b2-8cd4-33eda16bdb7a', '3401a86554db5e4c3ecc679ed7ef6b5171d30964', '["registry","libpq","mysql","ruby"]', 2, 'null', 'cb87e2ee9c510212a3c28b106206f3b444980236', '{"registry.http.port":{"description":"TCP port Registry daemon listens on","default":25777},"registry.http.user":{"description":"Username clients must use to access Registry via HTTP Basic Auth"},"registry.http.password":{"description":"Password clients must use to access Registry via HTTP Basic Auth"},"env.http_proxy":{"description":"HTTP proxy that the registry should use"},"env.https_proxy":{"description":"HTTPS proxy that the registry should use"},"env.no_proxy":{"description":"List of comma-separated hosts that should skip connecting to the proxy in the registry"},"registry.db.adapter":{"description":"The type of database used","default":"postgres"},"registry.db.user":{"description":"Username used for the registry database","default":"bosh"},"registry.db.password":{"description":"Password used for the registry database"},"registry.db.host":{"description":"Address of the registry database","default":"127.0.0.1"},"registry.db.port":{"description":"Port of the registry database","default":5432},"registry.db.database":{"description":"Name of the registry database","default":"bosh_registry"},"registry.db.connection_options":{"description":"Additional options for the database","default":{"max_connections":32,"pool_timeout":10}},"aws.credentials_source":{"description":"AWS credentials source","default":"static"},"aws.access_key_id":{"description":"AWS IAM Access Key ID"},"aws.secret_access_key":{"description":"AWS IAM Secret Access Key"},"aws.region":{"description":"AWS EC2 Region"},"aws.ec2_endpoint":{"description":"The service endpoint for Amazon EC2 (optional, if not supplied default region endpoint will be used)"},"aws.elb_endpoint":{"description":"The service endpoint for Amazon Elastic Load Balancing (optional, if not supplied default region endpoint will be used)"},"aws.max_retries":{"description":"Max number of retries to connect to AWS","default":2},"aws.ssl_ca_file":{"description":"The path to a CA cert bundle in PEM format"},"aws.ssl_ca_path":{"description":"The path the a CA cert directory"},"aws.ssl_verify_peer":{"description":"When true the HTTP handler validate server certificates for HTTPS requests"},"openstack.auth_url":{"description":"URL of the OpenStack Identity endpoint to connect to"},"openstack.username":{"description":"OpenStack user name"},"openstack.api_key":{"description":"OpenStack API key"},"openstack.tenant":{"description":"OpenStack tenant name (required for Keystone API version 2)"},"openstack.project":{"description":"OpenStack project name (required for Keystone API version 3)"},"openstack.domain":{"description":"OpenStack domain (required for Keystone API version 3)"},"openstack.region":{"description":"OpenStack region (optional)"},"openstack.endpoint_type":{"description":"OpenStack endpoint type (optional, by default publicURL)","default":"publicURL"},"openstack.connection_options":{"description":"Hash containing optional connection parameters to the OpenStack API"}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (11, 'postgres', '24fe5261816d5bf75caab258ce1b2ee15b4ad2e0', 'db41f1cc-dafe-4e82-9b38-7f54a8f71071', 'a7003a2811a052fe89c514fe29e2f5dc0024b074', '["postgres"]', 2, 'null', '24fe5261816d5bf75caab258ce1b2ee15b4ad2e0', '{"postgres.user":{"description":"Username clients must use to access Postgres","default":"bosh"},"postgres.password":{"description":"Password clients must use to access Postgres"},"postgres.listen_address":{"description":"IP address Postgres listens on; use 0.0.0.0 to listen on all IP addresses","default":"127.0.0.1"},"postgres.port":{"description":"TCP port Postgres listens on","default":5432},"postgres.database":{"description":"Default Postgres database (it will be created during the startup process)","default":"bosh"},"postgres.additional_databases":{"description":"Additional Postgres databases to be created (during the startup process)","default":[]}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (12, 'blobstore', '267710c9165f827561b14b020c1181b098df27cf', '8b7df1b6-bfda-476d-8ac9-19f223b5760d', 'b22a7964c3660eaf654442707e998c8afe18b145', '["nginx"]', 2, 'null', '267710c9165f827561b14b020c1181b098df27cf', '{"blobstore.port":{"description":"TCP port blobstore server (ngnix) listens on","default":25250},"blobstore.backend_port":{"description":"TCP port backend blobstore server (simple blobstore) listens on","default":25251},"blobstore.director.user":{"description":"Username director must use to access blobstore via HTTP Basic"},"blobstore.director.password":{"description":"Password director must use to access blobstore via HTTP Basic"},"blobstore.agent.user":{"description":"Username agents must use to access blobstore via HTTP Basic"},"blobstore.agent.password":{"description":"Password agents must use to access blobstore via HTTP Basic"},"blobstore.max_upload_size":{"description":"Max allowed file size for upload","default":"5000m"}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (13, 'director', 'b994f6bfc668b2932509f51b6b173127fbf53806', 'c159211a-9dcc-49ba-8324-fcb9dfa9298e', '86bf03276a117778b6785dbe1006db353b3c21d6', '["director","nginx","genisoimage","libpq","postgres","mysql","ruby"]', 2, 'null', 'b994f6bfc668b2932509f51b6b173127fbf53806', '{"env.http_proxy":{"description":"HTTP proxy that the director, scheduler and workers should use"},"env.https_proxy":{"description":"HTTPS proxy that the director, scheduler and workers should use"},"env.no_proxy":{"description":"List of comma-separated hosts that should skip connecting to the proxy in the director, scheduler and workers"},"director.name":{"description":"Name of the director"},"director.port":{"description":"Port that the director nginx listens on","default":25555},"director.backend_port":{"description":"Port that the director listens on","default":25556},"director.nginx.workers":{"description":"Number of nginx workers for director","default":2},"director.nginx.ssl_prefer_server_ciphers":{"description":"Prefer server''s cipher priority instead of client''s (true for On, false for Off)","default":true},"director.nginx.ssl_protocols":{"description":"SSL/TLS protocols to allow","default":"TLSv1 TLSv1.1 TLSv1.2"},"director.nginx.ssl_ciphers":{"description":"List of SSL ciphers to allow (format: https://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT)","default":"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK"},"director.timeout":{"description":"Timeout for connection from bosh CLI to nginx","default":7200},"director.proxy_timeout":{"description":"Timeout for proxy connection from nginx to director","default":900},"director.max_upload_size":{"description":"Max allowed file size for upload","default":"10000m"},"director.ssl.cert":{"description":"SSL Certificate for director (PEM encoded)"},"director.ssl.key":{"description":"SSL private key for director (PEM encoded)"},"director.encryption":{"description":"Enable/Disable agent-director encryption (true|false)","default":false},"director.max_tasks":{"description":"Max number of tasks per each type to keep in disk","default":100},"director.max_threads":{"description":"Max number of director concurrent threads","default":32},"director.enable_snapshots":{"description":"Enable/Disable snapshots for persistent disks (true|false)","default":false},"director.snapshot_schedule":{"description":"RufusScheduler cron formatted schedule for snapshots","default":"0 0 7 * * * UTC"},"director.self_snapshot_schedule":{"description":"RufusScheduler cron formatted schedule for self snapshots","default":"0 0 6 * * * UTC"},"director.backup_schedule":{"description":"RufusScheduler cron formatted schedule for backups"},"director.auto_fix_stateful_nodes":{"description":"Enable/Disable auto resolution for stateful nodes for scan_and_fix (true|false)","default":true},"director.max_vm_create_tries":{"description":"Max retries when creating VMs","default":5},"director.debug.keep_unreachable_vms":{"description":"When a bosh deploy fails, the failed VM will be kept instead of destroyed","default":false},"director.disks.max_orphaned_age_in_days":{"description":"Days to keep orphaned disks and orhaned snapshots before cleanup","default":5},"director.disks.cleanup_schedule":{"description":"RufusScheduler cron formatted schedule for cleanup of orphaned disks and orphaned snapshots","default":"0 0,30 * * * * UTC"},"director.user_management.provider":{"description":"User management implementation (local|uaa)","default":"local"},"director.user_management.uaa.url":{"description":"Uaa URL"},"director.user_management.uaa.symmetric_key":{"description":"Symmetric key to verify Uaa token"},"director.user_management.uaa.public_key":{"description":"Public key to verify Uaa token when token is encoded with asymmetric encryption"},"director.user_management.local.users":{"description":"List of users that can authenticate with director in non-Uaa mode"},"director.default_ssh_options.gateway_host":{"description":"Default host to use as ssh gateway with bosh ssh command"},"director.default_ssh_options.gateway_user":{"description":"Default user to use with bosh ssh command","default":"vcap"},"redis.address":{"description":"Address of the redis server","default":"127.0.0.1"},"redis.port":{"description":"Port that the redis server listens on","default":25255},"redis.password":{"description":"Password of the redis server"},"redis.loglevel":{"description":"Level of log messages for Redis connections (fatal, error, warn, info, debug)","default":"info"},"nats.user":{"description":"Username to connect to nats with","default":"nats"},"nats.password":{"description":"Password to connect to nats with"},"nats.address":{"description":"Address of the nats server"},"nats.port":{"description":"Port that the nats server listens on","default":4222},"director.db.adapter":{"description":"The type of database used (mysql2|postgres|sqlite)","default":"postgres"},"director.db.user":{"description":"Username used for the director database","default":"bosh"},"director.db.password":{"description":"Password used for the director database"},"director.db.host":{"description":"Address of the director database, for example, in the case of AWS RDS:\\nrds-instance-name.coqxxxxxxxxx.us-east-1.rds.amazonaws.com\\n","default":"127.0.0.1"},"director.db.port":{"description":"Port of the director database (e.g, msyql2 adapter would generally use 3306)","default":5432},"director.db.database":{"description":"Name of the director database","default":"bosh"},"director.db.connection_options":{"description":"Additional options for the database","default":{"max_connections":32,"pool_timeout":10}},"dns.address":{"description":"Address of the powerdns server"},"dns.domain_name":{"description":"TLD of the dns zone used by bosh","default":"bosh"},"dns.db.adapter":{"description":"DNS Database adapter","default":"postgres"},"dns.db.user":{"description":"DNS Database user","default":"bosh"},"dns.db.password":{"description":"DNS Database password"},"dns.db.host":{"description":"DNS Database host","default":"127.0.0.1"},"dns.db.port":{"description":"Port that the powerdns database listens on","default":5432},"dns.db.database":{"description":"Name of the powerdns database","default":"bosh"},"dns.db.connection_options":{"description":"Additional options for the powerdns database","default":{"max_connections":32,"pool_timeout":10}},"blobstore.provider":{"description":"Provider of the blobstore used by director and agent (dav|simple|s3)","default":"dav"},"blobstore.s3_region":{"description":"Region of the blobstore used by s3 blobstore plugin"},"blobstore.bucket_name":{"description":"AWS S3 Bucket used by s3 blobstore plugin"},"blobstore.credentials_source":{"description":"AWS Credential Source (static / env_or_profile)","default":"static"},"blobstore.access_key_id":{"description":"AWS access_key_id used by s3 blobstore plugin"},"blobstore.secret_access_key":{"description":"AWS secret_access_key used by s3 blobstore plugin"},"blobstore.address":{"description":"Address of blobstore server used by simple blobstore plugin"},"blobstore.port":{"description":"Port of blobstore server used by simple blobstore plugin","default":25250},"blobstore.host":{"description":"Host of blobstore server used by simple blobstore plugin"},"blobstore.use_ssl":{"description":"Whether the simple blobstore plugin should use SSL to connect to the blobstore server","default":true},"blobstore.s3_port":{"description":"Port of blobstore server used by s3 blobstore plugin","default":443},"blobstore.s3_force_path_style":{"description":"Whether s3 blobstore plugin will always use path style for bucket access","default":false},"blobstore.ssl_verify_peer":{"description":"Verify the SSL certificate used on the blobstore?","default":true},"blobstore.s3_multipart_threshold":{"description":"Byte threshold at which blob uploads should be broken into multi-part FORM uploads instead of single PUT","default":16777216},"blobstore.director.user":{"description":"Username director uses to connect to blobstore used by simple blobstore plugin"},"blobstore.director.password":{"description":"Password director uses to connect to blobstore used by simple blobstore plugin"},"blobstore.agent.user":{"description":"Username agent uses to connect to blobstore used by simple blobstore plugin"},"blobstore.agent.password":{"description":"Password agent uses to connect to blobstore used by simple blobstore plugin"},"director.backup_destination":{"description":"Configuration of the blobstore used by director for backups (dav|simple|s3)"},"director.ignore_missing_gateway":{"description":"Allow gateway to be omitted from subnet configuration. Boshlite vms(containers) do not require gateway.","default":false},"compiled_package_cache.provider":{"description":"Provider of the blobstore used for the compiled package cache","default":"s3"},"compiled_package_cache.options.bucket_name":{"description":"AWS S3 Bucket used for the compiled package cache"},"compiled_package_cache.options.credentials_source":{"description":"AWS credentials (static / env_or_profile)","default":"static"},"compiled_package_cache.options.access_key_id":{"description":"AWS access_key_id used for the compiled package cache"},"compiled_package_cache.options.secret_access_key":{"description":"AWS secret_access_key used for the compiled package cache"},"compiled_package_cache.options.port":{"description":"Port of blobstore server used for compiled package cache","default":25250},"compiled_package_cache.options.host":{"description":"Host of blobstore server used for compiled package cache"},"compiled_package_cache.options.use_ssl":{"description":"Whether the simple blobstore plugin should use SSL to connect to the blobstore server","default":true},"compiled_package_cache.options.ssl_verify_peer":{"description":"Verify the SSL certificate used on the blobstore?","default":true},"compiled_package_cache.options.s3_port":{"description":"Port of blobstore server used by s3 blobstore plugin","default":443},"compiled_package_cache.options.s3_force_path_style":{"description":"Whether s3 blobstore plugin will always use path style for bucket access","default":false},"compiled_package_cache.options.s3_multipart_threshold":{"description":"Byte threshold at which blob uploads should be broken into multi-part FORM uploads instead of single PUT","default":16777216},"ntp":{"description":"List of ntp server IPs. pool.ntp.org attempts to return IPs closest to your location, but you can still specify if needed.","default":["0.pool.ntp.org","1.pool.ntp.org"]},"director.trusted_certs":{"description":"Cerfiticates that VMs created by this director should trust in addition to those packaged with the stemcell (PEM encoded; zero or more certs allowed)","default":""},"director.cpi_job":{"description":"Name of cpi job (null to use bundled cpi gems)"},"agent.blobstore.credentials_source":{"description":"AWS credentials (static / env_or_profile)","default":"static"},"agent.blobstore.access_key_id":{"description":"AWS access_key_id for agent used by s3 blobstore plugin"},"agent.blobstore.secret_access_key":{"description":"AWS secret_access_key for agent used by s3 blobstore plugin"},"agent.blobstore.s3_region":{"description":"AWS region for agent used by s3 blobstore plugin"},"agent.blobstore.address":{"description":"Address for agent to connect to blobstore server used by simple blobstore plugin"},"agent.blobstore.port":{"description":"Port for agent to connect to blobstore server used by simple blobstore plugin"},"agent.blobstore.host":{"description":"Host of blobstore server used by simple blobstore plugin"},"agent.blobstore.use_ssl":{"description":"Whether the simple blobstore plugin should use SSL to connect to the blobstore server","default":true},"agent.blobstore.ssl_verify_peer":{"description":"Verify the SSL certificate used on the blobstore?","default":true},"agent.blobstore.s3_force_path_style":{"description":"Whether s3 blobstore plugin will always use path style for bucket access","default":false},"agent.blobstore.s3_multipart_threshold":{"description":"Byte threshold at which blob uploads should be broken into multi-part FORM uploads instead of single PUT","default":16777216},"agent.nats.address":{"description":"Address for agent to connect to nats"},"registry.address":{"description":"Address of the Registry to connect to"},"registry.http.port":{"description":"Port of the Registry to connect to","default":25777},"registry.http.user":{"description":"User to access the Registry"},"registry.http.password":{"description":"Password to access the Registry"},"aws.access_key_id":{"description":"AWS access_key_id for aws cpi"},"aws.secret_access_key":{"description":"AWS secret_access_key for aws cpi"},"aws.default_key_name":{"description":"Default ssh keypair used by aws cpi when creating vms"},"aws.default_security_groups":{"description":"Default security group used by aws cpi"},"aws.default_iam_instance_profile":{"description":"Default IAM profile to be used by aws cpi"},"aws.credentials_source":{"description":"AWS credentials (static / env_or_profile)","default":"static"},"aws.region":{"description":"AWS Region used by aws cpi"},"aws.ec2_endpoint":{"description":"The service endpoint for Amazon EC2 (optional, if not supplied default region endpoint will be used)"},"aws.elb_endpoint":{"description":"The service endpoint for Amazon Elastic Load Balancing (optional, if not supplied default region endpoint will be used)"},"aws.max_retries":{"description":"Max number of retries to connect to AWS","default":2},"aws.http_read_timeout":{"description":"The number of seconds before the aws cpi should timeout while waiting for response","default":60},"aws.http_wire_trace":{"description":"When true aws cpi will log all wire traces","default":false},"aws.ssl_ca_file":{"description":"The path to a CA cert bundle in PEM format"},"aws.ssl_ca_path":{"description":"The path the a CA cert directory"},"aws.ssl_verify_peer":{"description":"When true the HTTP handler validate server certificates for HTTPS requests"},"aws.stemcell.kernel_id":{"description":"AWS kernel id used by aws cpi"},"openstack.auth_url":{"description":"URL of the OpenStack Identity endpoint to connect to"},"openstack.username":{"description":"OpenStack user name"},"openstack.api_key":{"description":"OpenStack API key"},"openstack.tenant":{"description":"OpenStack tenant name (required for Keystone API version 2)"},"openstack.project":{"description":"OpenStack project name (required for Keystone API version 3)"},"openstack.domain":{"description":"OpenStack domain (required for Keystone API version 3)"},"openstack.region":{"description":"OpenStack region (optional)"},"openstack.endpoint_type":{"description":"OpenStack endpoint type (optional, by default publicURL)","default":"publicURL"},"openstack.state_timeout":{"description":"Timeout (in seconds) for OpenStack resources desired state (optional, by default 300)","default":300},"openstack.boot_from_volume":{"description":"Boot from volume (optional, false by default)","default":false},"openstack.boot_volume_cloud_properties.type":{"description":"Volume type for the boot volume (optional)"},"openstack.stemcell_public_visibility":{"description":"Set public visibility for stemcells (optional, false by default)","default":false},"openstack.connection_options":{"description":"Hash containing optional connection parameters to the OpenStack API"},"openstack.default_key_name":{"description":"Default OpenStack keypair to use when spinning up new vms"},"openstack.default_security_groups":{"description":"Default OpenStack security groups to use when spinning up new vms"},"openstack.wait_resource_poll_interval":{"description":"Changes the delay (in seconds) between each status check to OpenStack when creating a resource (optional, by default 5)","default":5},"openstack.config_drive":{"description":"Config drive device (cdrom or disk) to use as metadata service on OpenStack (optional, nil by default)"},"openstack.use_dhcp":{"description":"Whether to use DHCP when configuring networking on VM (for both manual and dynamic)","default":true},"openstack.ignore_server_availability_zone":{"description":"When creating disks do not use the servers AZ, default to openstack default","default":false},"vcenter.address":{"description":"Address of vCenter server used by vsphere cpi"},"vcenter.user":{"description":"User to connect to vCenter server used by vsphere cpi"},"vcenter.password":{"description":"Password to connect to vCenter server used by vspher cpi"},"vcenter.datacenters":{"description":"Datacenters in vCenter to use (value is an array of Hashes representing datacenters and clusters, See director.yml.erb.erb)"},"vcd.url":{"description":"The endpoint of the target vCloud Director"},"vcd.user":{"description":"The user name of the target vCloud Director"},"vcd.password":{"description":"The password of the target vCloud Director"},"vcd.entities.organization":{"description":"The organization name"},"vcd.entities.virtual_datacenter":{"description":"The virtual data center name in vCloud Director"},"vcd.entities.vapp_catalog":{"description":"The name of the calalog for vapp template"},"vcd.entities.media_catalog":{"description":"The name of the calalog for media files"},"vcd.entities.vm_metadata_key":{"description":"The key name of VM metadata","default":"vcd-cf"},"vcd.entities.description":{"description":"Text associated with the VMs","default":"vcd-cf"}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (14, 'redis', '708da93eea8f2c36fd576d6b349e78ab80bdedfa', 'acb67d9b-fde6-4fbc-893a-0390b7def767', 'e754e430b46a15dce645310c01ff0e985ae60faa', '["redis"]', 2, 'null', '708da93eea8f2c36fd576d6b349e78ab80bdedfa', '{"redis.password":{"description":"Password clients must use to access Redis server"},"redis.port":{"description":"TCP port Redis server listens on","default":25255},"redis.listen_address":{"description":"IP address Redis server listens on; use 0.0.0.0 to listen on all IP addresses","default":"127.0.0.1"}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (15, 'postgres-9.4.5', 'e9a0acff23a730a469e1109ebbcdc3bc4b181415', '056fd586-82bc-49d1-a45d-0562a9ce59b9', '814c17ffc9db91d71199357482cde4768bae3ead', '["postgres","postgres-9.4.5"]', 2, 'null', 'e9a0acff23a730a469e1109ebbcdc3bc4b181415', '{"postgres.user":{"description":"Username clients must use to access Postgres","default":"bosh"},"postgres.password":{"description":"Password clients must use to access Postgres"},"postgres.listen_address":{"description":"IP address Postgres listens on; use 0.0.0.0 to listen on all IP addresses","default":"127.0.0.1"},"postgres.port":{"description":"TCP port Postgres listens on","default":5432},"postgres.database":{"description":"Default Postgres database (it will be created during the startup process)","default":"bosh"},"postgres.additional_databases":{"description":"Additional Postgres databases to be created (during the startup process)","default":[]}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (16, 'powerdns', 'df20bcfaa20062ef2e0136f6b6a5dbdc62f7b6a8', 'ed81d644-f04f-4737-9619-4023fdac3633', '6758d5bd60c6f21a852a42fac9ed0bd52915b748', '["powerdns"]', 2, 'null', 'df20bcfaa20062ef2e0136f6b6a5dbdc62f7b6a8', '{"dns.db.adapter":{"description":"Adapter for the PowerDNS database connection","default":"postgres"},"dns.db.user":{"description":"User for the PowerDNS database connection","default":"bosh"},"dns.db.password":{"description":"Password for the PowerDNS database connection"},"dns.db.host":{"description":"Address for the PowerDNS database","default":"127.0.0.1"},"dns.db.port":{"description":"Port for the PowerDNS database connection","default":5432},"dns.db.database":{"description":"Database for the PowerDNS database connection","default":"bosh"},"dns.distributor_threads":{"description":"Number of threads to query the backend, for each receiver thread","default":2},"dns.receiver_threads":{"description":"Number of sockets the powerdns process will open","default":2},"dns.recursor":{"description":"If recursion is desired, IP address of a recursing nameserver (optional)"},"dns.local_address":{"description":"IP address to which to bind to (optional; useful with multiple IP addresses)"},"dns.query_local_address":{"description":"IP address to use as a source address for sending queries (optional; useful with multiple IP addresses)"},"dns.address":{"description":"Address of the primary PowerDNS instance"},"dns.webserver.port":{"description":"TCP port PowerDNS webserver listens on (optional)","default":8081},"dns.webserver.address":{"description":"IP address PowerDNS webserver listens on (optional)","default":"0.0.0.0"},"dns.webserver.password":{"description":"Password clients must use to access PowerDNS webserver (optional)"}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (17, 'nats', '329a9df8c4b7d3655c57e59d8fe2a03d65843cac', '8cc64fd5-13c5-44e9-8690-0ce753f06418', '73de8659da15387295b879d8190c2d6d79037ac8', '["nats","ruby"]', 2, 'null', '329a9df8c4b7d3655c57e59d8fe2a03d65843cac', '{"nats.listen_address":{"description":"IP address nats mbus listens on","default":"0.0.0.0"},"nats.port":{"description":"TCP port nats mbus listens on","default":4222},"nats.no_epoll":{"description":"Disable epoll (Linux)","default":false},"nats.no_kqueue":{"description":"Disable kqueue (MacOSX and BSD)","default":true},"nats.ping_interval":{"description":"Time interval (in seconds) pings from server","default":5},"nats.ping_max_outstanding":{"description":"Maximum number of pings before declaring a client unresponsive","default":2},"nats.user":{"description":"Username clients must use to access nats mbus"},"nats.password":{"description":"Password clients must use to access nats mbus"},"nats.auth_timeout":{"description":"Timeout (in seconds) for clients to send auth credentials","default":1},"nats.http.port":{"description":"TCP port NATS listens on for HTTP connections (optional)","default":9222},"nats.http.user":{"description":"Username clients must use to access nats mbus via HTTP connection (optional)"},"nats.http.password":{"description":"Password clients must use to access nats mbus via HTTP connection (optional)"}}', NULL, NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (54, 'addon', '39adedad4737bc2acce16352c55c14de0a601512', '5dde116b-d372-4d5b-a379-3d4c1af10d06', '8551b45046e05ae4daae53511105524c2c11ca28', '[]', 6, 'null', '39adedad4737bc2acce16352c55c14de0a601512', '{}', '[{"name":"db","type":"db"}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (55, 'api_server', '8c6864dd746cadc5c39259b0b7a1fe9f40205b65', '87dd4698-f4b2-472c-9d54-e1d575a4a149', 'feb7437118ce9af27cf7abde4e4098a345eceb18', '["pkg_3_depends_on_2"]', 6, 'null', '8c6864dd746cadc5c39259b0b7a1fe9f40205b65', '{}', '[{"name":"db","type":"db"},{"name":"backup_db","type":"db"}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (56, 'api_server_with_bad_link_types', '5efc0322b51eace0b355e7613f06b7238d2a04c7', '4bed36e0-af4a-4a6a-84e4-d5187e14dbef', '4914314ec8ac170410dbb2b25038e750237e4746', '["pkg_3_depends_on_2"]', 6, 'null', '5efc0322b51eace0b355e7613f06b7238d2a04c7', '{}', '[{"name":"db","type":"bad_link"},{"name":"backup_db","type":"bad_link_2"},{"name":"some_link_name","type":"bad_link_3"}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (57, 'api_server_with_bad_optional_links', '1df8cd1987c1711bb04af2f43378715296070765', 'bd59552c-d9d3-4a03-81eb-1a62a68d9ae1', '65b3a0ca33dbf858bb184d95838eb40ddce98dc4', '["pkg_3_depends_on_2"]', 6, 'null', '1df8cd1987c1711bb04af2f43378715296070765', '{}', '[{"name":"optional_link_name","type":"optional_link_type","optional":true}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (58, 'api_server_with_optional_db_link', '0546154e8a50dd973e8480e69638645583cb38d9', '6c959d83-ac2a-4182-a4d8-d62c46d90b10', '99a8155a26a6d7144fea775b741c9912de8f14f7', '["pkg_3_depends_on_2"]', 6, 'null', '0546154e8a50dd973e8480e69638645583cb38d9', '{}', '[{"name":"db","type":"db","optional":true}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (59, 'api_server_with_optional_links_1', '5ae8a1435d098577de613fe4de18c252b1a624d3', 'b5a470cc-20cd-481b-936c-9f007264d734', 'dbd80f76c907efcf1c13e256e4b8ef5f14d123f1', '["pkg_3_depends_on_2"]', 6, 'null', '5ae8a1435d098577de613fe4de18c252b1a624d3', '{}', '[{"name":"db","type":"db"},{"name":"backup_db","type":"db"},{"name":"optional_link_name","type":"optional_link_type","optional":true}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (60, 'api_server_with_optional_links_2', 'a4c1f8bc664578874ea9de1dc0618b9f3e811172', '3b979f32-620f-49f0-a65e-1150dcad4421', 'c4117d95d6d96ef0f26859e7ffa34e75aedbf7a2', '["pkg_3_depends_on_2"]', 6, 'null', 'a4c1f8bc664578874ea9de1dc0618b9f3e811172', '{}', '[{"name":"db","type":"db"},{"name":"backup_db","type":"db","optional":true}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (61, 'backup_database', 'c6802f3d21e6c2367520629c691ab07e0e49be6d', '40675258-6d5b-43ad-ada8-267ac180566d', 'fbcbf3e2a3a5a52adf85a8fa8a641dbc41c0b7fc', '[]', 6, 'null', 'c6802f3d21e6c2367520629c691ab07e0e49be6d', '{}', NULL, '[{"name":"backup_db","type":"db"}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (62, 'consumer', 'fd947fc4a2c659dac7d540eca671f09bf4b77e78', '3f8eec6f-6a80-4ae1-8a43-df8ae9ef7e18', '670a769083446975bf6238015ea8f0df2f9e9a48', '[]', 6, 'null', 'fd947fc4a2c659dac7d540eca671f09bf4b77e78', '{}', '[{"name":"provider","type":"provider"}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (63, 'database', '6f16ca3fad0d120eefd91334f4c8d3584886cc3d', '17b02926-936d-41a7-aa48-07347d15826f', 'f271a611261027f49a2d36017dbedc338712b287', '[]', 6, 'null', '6f16ca3fad0d120eefd91334f4c8d3584886cc3d', '{"test":{"description":"test property","default":"default test property"}}', NULL, '[{"name":"db","type":"db"}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (64, 'database_with_two_provided_link_of_same_type', 'b7746534b85842be9600c0c782a8d5896594649e', '3fda69d1-ec19-4d89-a877-28d7395aa00f', 'fef9ffdefc3b9ac0206589c78a13b1e6afe24d9d', '[]', 6, 'null', 'b7746534b85842be9600c0c782a8d5896594649e', '{"test":{"description":"test property","default":"default test property"}}', NULL, '[{"name":"db1","type":"db"},{"name":"db2","type":"db"}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (65, 'http_proxy_with_requires', '9e3c4bc3d0a26f16154605a18424181d4c1f268b', 'f9060ad3-d5b0-4111-a920-4cdbee971f31', '26618ea9ee697390854436808d1179ed748a4b2b', '[]', 6, 'null', '9e3c4bc3d0a26f16154605a18424181d4c1f268b', '{"http_proxy_with_requires.listen_port":{"description":"Listen port","default":8080},"http_proxy_with_requires.require_logs_in_template":{"description":"Require logs in template","default":false},"someProp":{"default":null}}', '[{"name":"proxied_http_endpoint","type":"http_endpoint"},{"name":"logs_http_endpoint","type":"http_endpoint2","optional":true}]', NULL);
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (66, 'http_server_with_provides', 'f918478d2ad24b929f36090730a536af826c3dd5', 'd5cabaf1-3b00-4082-86e4-ff445674c5b6', '0082ba4435819a43426c449c4d40d5a3b8a22315', '[]', 6, 'null', 'f918478d2ad24b929f36090730a536af826c3dd5', '{"listen_port":{"description":"Port to listen on","default":8080},"name_space.prop_a":{"description":"a name spaced property","default":"default"},"name_space.fibonacci":{"description":"has no default value"}}', NULL, '[{"name":"http_endpoint","type":"http_endpoint","properties":["listen_port","name_space.prop_a","name_space.fibonacci"]}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (67, 'kv_http_server', '49405862d6abb98a9f9ad7c3f9866ff5986c0269', '12852e2f-2384-4231-bd68-575fc9748f81', 'def3842a9856789a7763a5b715796d074e21ae50', '[]', 6, 'null', '49405862d6abb98a9f9ad7c3f9866ff5986c0269', '{"kv_http_server.listen_port":{"description":"Port to listen on","default":8080}}', '[{"name":"kv_http_server","type":"kv_http_server"}]', '[{"name":"kv_http_server","type":"kv_http_server"}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (68, 'mongo_db', '2a32a7517a77bfa606a7a4ae0ae8097bf36505df', 'e907d31b-7fb3-43e8-9242-1a7e7cc48949', 'e1734aa3252c53b06c5cfa1730a3c33fa7afe98d', '["pkg_1"]', 6, 'null', '2a32a7517a77bfa606a7a4ae0ae8097bf36505df', '{}', NULL, '[{"name":"read_only_db","type":"db"}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (69, 'node', '9bf2cb66c06889609404fbe10b3c8f597463bdb5', '86c8c97d-5997-4280-8880-6d2831e7ce17', '3f09a29fcf82d93f011b2be4d216d64f1aafeca1', '[]', 6, 'null', '9bf2cb66c06889609404fbe10b3c8f597463bdb5', '{}', '[{"name":"node1","type":"node1"},{"name":"node2","type":"node2"}]', '[{"name":"node1","type":"node1"},{"name":"node2","type":"node2"}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (70, 'provider', 'f1ed2e722c0c08eeb95ce150f606c9aaad8c3ef0', 'db4b62c2-d646-488f-820f-020ab66efa75', '359c875852f5a77cf00b0f03d727fe27346fb179', '[]', 6, 'null', 'f1ed2e722c0c08eeb95ce150f606c9aaad8c3ef0', '{"a":{"description":"description for a","default":"default_a"},"b":{"description":"description for b"},"c":{"description":"description for c","default":"default_c"}}', NULL, '[{"name":"provider","type":"provider","properties":["a","b","c"]}]');
INSERT INTO templates (id, name, version, blobstore_id, sha1, package_names_json, release_id, logs_json, fingerprint, properties_json, consumes_json, provides_json) VALUES (71, 'provider_fail', '4cf36f68db25506b358e64abd7252f06251eff19', '3fe45207-46d4-4e9e-8633-0dd1c48dde6f', '3a24bcfa4c05693aff753a00a966e8a518385515', '[]', 6, 'null', '4cf36f68db25506b358e64abd7252f06251eff19', '{"a":{"description":"description for a","default":"default_a"},"c":{"description":"description for c","default":"default_c"}}', NULL, '[{"name":"provider_fail","type":"provider","properties":["a","b","c"]}]');