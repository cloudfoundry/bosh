#!/bin/bash

RUN_DIR=/var/vcap/sys/run/director
LOG_DIR=/var/vcap/sys/log/director
STORE_DIR=/var/vcap/store/director

PIDFILE=$RUN_DIR/director.pid
RUNAS=vcap

PATH=/var/vcap/packages/ruby/bin:/var/vcap/packages/genisoimage:$PATH
PATH=$PATH:/var/vcap/jobs/director/bin
export PATH

export BUNDLE_GEMFILE=/var/vcap/packages/director/Gemfile
export GEM_HOME=/var/vcap/packages/director/gem_home/ruby/1.9.1

export TMPDIR=/var/vcap/data/tmp/director

export C_INCLUDE_PATH=/var/vcap/packages/sqlite/include:/var/vcap/packages/libpq/include:$C_INCLUDE_PATH
export LIBRARY_PATH=/var/vcap/packages/sqlite/lib:/var/vcap/packages/libpq/lib:/var/vcap/packages/mysqlclient/lib:$LIBRARY_PATH

<% if_p('director.env.http_proxy') do |http_proxy| %>
export HTTP_PROXY=<%= http_proxy %>
export http_proxy=<%= http_proxy %>
<% end %>
<% if_p('director.env.https_proxy') do |https_proxy| %>
export HTTPS_PROXY=<%= https_proxy %>
export https_proxy=<%= https_proxy %>
<% end %>
<% if_p('director.env.no_proxy') do |no_proxy| %>
export NO_PROXY=<%= no_proxy %>
export no_proxy=<%= no_proxy %>
<% end %>

function pid_exists() {
  ps -p $1 &> /dev/null
}

case $1 in

  start)
    mkdir -p $RUN_DIR $LOG_DIR $STORE_DIR $TMPDIR
    chown -R $RUNAS:$RUNAS $RUN_DIR $LOG_DIR $STORE_DIR $TMPDIR

    # This hackery is needed until we have a way to manage things outside
    # the /var/vcap directory. Requires stemcell 0.5.4 or later
    cp /var/vcap/jobs/director/config/sudoers /etc/sudoers.d/director
    chmod 440 /etc/sudoers.d/director

    # if we encounter a problem after adding the sudoers file, back it out
    # and abort
    visudo -c
    if [ $? -ne 0 ]; then
      rm /etc/sudoers.d/director
      echo "ERROR: could not configure sudoers"
      exit 1
    fi

    COMPONENT=director erb /var/vcap/jobs/director/config/director.yml.erb > /var/vcap/jobs/director/config/director.yml

    chpst -u $RUNAS:$RUNAS \
          /var/vcap/packages/director/bin/bosh-director-migrate \
          -c /var/vcap/jobs/director/config/director.yml \
          >>$LOG_DIR/migrate.stdout.log 2>>$LOG_DIR/migrate.stderr.log

        if [ $? -ne 0 ]; then
          echo "migration failed"
          exit 1
        fi

    (crontab -l | sed /task_logrotate/d; cat /var/vcap/jobs/director/config/task_logrotate.cron) | sed /^$/d | crontab

    echo $$ > $PIDFILE

    exec chpst -u $RUNAS:$RUNAS \
      /var/vcap/packages/director/bin/bosh-director \
      -c /var/vcap/jobs/director/config/director.yml \
      >>$LOG_DIR/director.stdout.log 2>>$LOG_DIR/director.stderr.log
    ;;

  stop)
    PID=$(head -1 $PIDFILE)
    if [ ! -z $PID ] && pid_exists $PID; then
      kill $PID
    fi
    while [ -e /proc/$PID ]; do sleep 0.1; done
    rm -f $PIDFILE
    ;;

  console)
    /var/vcap/packages/director/bin/bosh-director-console -c /var/vcap/jobs/director/config/director.yml
    ;;

  *)
  echo "Usage: director_ctl {start|stop|console}" ;;
esac
exit 0
